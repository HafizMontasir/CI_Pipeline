name: Frontend CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json
    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci
    - name: Run Lint
      working-directory: starter/frontend
      run: npm run lint

  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json
      - name: Install Dependencies
        working-directory: starter/frontend
        run: npm ci
      - name: Run Tests
        working-directory: starter/frontend
        run: CI=true npm test

  Build_and_Push:
    runs-on: ubuntu-latest
    needs: [Lint, Test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Build Docker image
        env:
          REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL="http://$REACT_APP_MOVIE_API_URL/movies" --tag 458978242428.dkr.ecr.us-east-1.amazonaws.com/frontend:latest .
        working-directory: starter/frontend

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker image to Amazon ECR
        run: |
          docker push 458978242428.dkr.ecr.us-east-1.amazonaws.com/frontend:latest

  Deploy:
    runs-on: ubuntu-latest
    needs: Build_and_Push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: update kubeconfig
        run: aws eks update-kubeconfig --name cluster --region us-east-1

      - name: Deploy to Kubernetes
        run: |
          cd starter/frontend/k8s
          kustomize edit set image frontend=458978242428.dkr.ecr.us-east-1.amazonaws.com/frontend:latest
          kustomize build | kubectl apply -f -

      - name: Print Application URLs
        run: kubectl get svc -A
